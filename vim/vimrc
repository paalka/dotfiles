set nocompatible    " be iMproved, required
filetype off        " required

set number " show line numbers

syntax on " turn on syntax highlighting

set wildmenu " Enable a graphical menu for cycling through filenames.

set showmatch " Show matching [({})]

set hlsearch        " highlight search terms
set incsearch       " show search matches as you type

set visualbell      " don't beep
set noerrorbells    " don't beep

set title           " change the terminal's title

set copyindent      " copy the previous indentation on autoindenting
set smarttab        " Insert spaces based on the shiftwidth
set autoindent      " Copy the indent from the current line

set smartindent
set expandtab
set tabstop=2
set softtabstop=-1
set shiftwidth=2

filetype plugin indent on

set history=1000
set undolevels=1000

autocmd StdinReadPre * let s:std_in=1

set textwidth=72

" When a line is longer than textwidth, show the part longer than textwidth on
" the next line, instead of scrolling horizontally.
set wrap
set formatoptions=qrn1

set noerrorbells visualbell t_vb=

set viminfo='20,<500 " Save at most 500 lines per register.

set backupdir=~/.vim/backup/
set directory=~/.vim/swap/
set undodir=~/.vim/undo/

" ======== Visuals ======== "

set background=dark
color hybrid

hi TabLine ctermfg=232 ctermbg=242
hi TabLineFill term=bold cterm=bold ctermbg=234

" Highlight the current line.
set cursorline
hi CursorLine term=bold cterm=bold guibg=Grey40

" Make the background color of the gutter the same as the one defined by the
" colorscheme.
highlight clear SignColumn

" ======== Keybindings ======== "

" Easily save a file as root
cmap w!! w !sudo tee > /dev/null %

" use jk to enter command mode
imap jk <Esc>

" Make sure visual block mode always works.
noremap <C-V> <C-V>

" Don't jump over wrapped lines.
nnoremap j gj
nnoremap k gk

set spelllang=en_us,nb_no

" Clear searches
nnoremap <leader>l :nohlsearch<CR>

nnoremap <C-t>     :tabnew<CR>
inoremap <C-t>     <Esc>:tabnew<CR>

" make it possible to go to a other split by using ctrl+hjkl
nmap <silent> <c-k> :wincmd k<CR>
nmap <silent> <c-j> :wincmd j<CR>
nmap <silent> <c-h> :wincmd h<CR>
nmap <silent> <c-l> :wincmd l<CR>

map <SPACE> <Leader>

" Show line numbers relative to the current line when in command mode.
if v:version < 703
    finish
else
    autocmd InsertEnter * :set number
    autocmd InsertLeave * :set relativenumber
endif

set pastetoggle=<F2>

function! GitBranch()
  return system("git rev-parse --abbrev-ref HEAD 2>/dev/null | tr -d '\n'")
endfunction

function! StatuslineGit()
  let l:branchname = GitBranch()
  return strlen(l:branchname) > 0?'  '.l:branchname.' ':''
endfunction

" Always show the statusline
set laststatus=2

hi StatusLine ctermbg=white ctermfg=234

set statusline=
set statusline+=%#Normal#
set statusline+=%{StatuslineGit()}
set statusline+=%#StatusLine#
set statusline+=\ %f
set statusline+=%m\ 
set statusline+=%=
set statusline+=%#StatusLine#
set statusline+=\ %y
set statusline+=\ %{&fileencoding?&fileencoding:&encoding}
set statusline+=\[%{&fileformat}\]
set statusline+=\ %p%%
set statusline+=\ %l:%c
set statusline+=\ 

" ========= Plugins =========  "

call plug#begin('~/.vim/plugged')
Plug 'junegunn/fzf'
Plug 'junegunn/fzf.vim'
Plug 'kien/rainbow_parentheses.vim'
Plug 'Valloric/YouCompleteMe'
Plug 'scrooloose/nerdcommenter'
Plug 'tpope/vim-surround'
Plug 'easymotion/vim-easymotion'
Plug 'airblade/vim-gitgutter'
Plug 'tommcdo/vim-exchange'
Plug 'wellle/targets.vim'
Plug 'fatih/vim-go'
Plug 'editorconfig/editorconfig-vim'

if v:version >= 800
  Plug 'w0rp/ale'
else
  Plug 'scrooloose/syntastic'
endif

call plug#end()

" ========= Plugin settings =========  "

nmap <Leader>f :Files<CR>
nmap <Leader>b :Buffers<CR>
nmap <Leader>h :History<CR>
nmap <Leader>p :GFiles<CR>
nmap <Leader>a :Commands<CR>

" auto enable rainbow ()
au VimEnter * RainbowParenthesesToggle
au Syntax * RainbowParenthesesLoadRound
au Syntax * RainbowParenthesesLoadSquare
au Syntax * RainbowParenthesesLoadBraces


let g:syntastic_python_checkers=['flake8']
let g:syntastic_python_flake8_args='--ignore=E501,E225'

let g:NERDSpaceDelims = 1

let g:fzf_layout = { 'down': '~15%' }

nmap s <Plug>(easymotion-s2)
map  / <Plug>(easymotion-sn)

let g:EasyMotion_do_mapping = 0 " Disable default mappings
let g:EasyMotion_smartcase = 1

" YouCompleteMe
let g:ycm_collect_identifiers_from_comments_and_strings = 1
let g:ycm_complete_in_comments = 1
let g:ycm_seed_identifiers_with_syntax = 1

nnoremap <leader>g :YcmCompleter GoToDefinitionElseDeclaration<CR>

let g:ycm_autoclose_preview_window_after_insertion = 1
let g:ycm_autoclose_preview_window_after_completion = 1
