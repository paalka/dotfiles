# default statusbar colors
set-option -g status-bg black #base02
set-option -g status-fg yellow #yellow
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg brightblue #base0
set-window-option -g window-status-bg default
set-window-option -g window-status-attr dim

# active window title colors
set-window-option -g window-status-current-fg brightred #orange
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg black #base02
set-option -g pane-active-border-fg brightgreen #base01

# message text
set-option -g message-bg black #base02
set-option -g message-fg brightred #orange

# pane number display
set-option -g display-panes-active-colour blue #blue
set-option -g display-panes-colour brightred #orange

# clock
set-window-option -g clock-mode-colour green #green
set-option -g prefix C-a
set -g base-index 1

set -g status-left-length 32
set -g status-right-length 150

set -g status-fg white
set -g status-bg colour234
set -g message-fg colour16
set -g message-bg colour221
set -g message-attr bold

set -g status-left "#[fg=colour252]   #H #[fg=colour252,bg=colour238,nobold]>#[fg=colour245,bg=colour238,bold] #(whoami) #[fg=colour238,bg=colour234,nobold]"
set -g status-right '#[fg=yellow]#(cut -d " " -f 1-3 /proc/loadavg)#[default] #[fg=white]%H:%M#[default]'

# mouse settings
set-window-option -g mode-mouse on
set-option -g mouse-select-pane on

### COPY MODE THINGS
setw -g mode-keys vi
unbind [
bind Escape copy-mode

# Setup 'v' to begin selection as in Vim
bind-key -t vi-copy v begin-selection

# Update default binding of `Enter` to also use copy-pipe
unbind -t vi-copy Enter

# detach ^D d
unbind ^D
bind ^D detach
set-option -g status-utf8 on

set -g prefix ^A

unbind-key ^B
bind-key ^A send-prefix

set -g history-limit 100000

# Terminal emulator window title
set -g set-titles on
set -g set-titles-string '#S:#I.#P #W'

set-option -g default-shell /bin/zsh
set -g default-terminal "screen-256color"
  
# More straight forward key bindings for splitting
unbind %
bind | split-window -h
bind v split-window -h
bind - split-window -v

unbind '"'

bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."
set-window-option -g automatic-rename

# smart pane switching with awareness of vim splits
bind h run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-h) || tmux select-pane -L"
bind j run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-j) || tmux select-pane -D"
bind k run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-k) || tmux select-pane -U"
bind l run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys C-l) || tmux select-pane -R"
bind \ run "(tmux display-message -p '#{pane_current_command}' | grep -iq vim && tmux send-keys 'C-\\') || tmux select-pane -l"

bind @ source-file ~/.tmux/dev.conf

# Rather than constraining window size to the maximum size of any client
# # connected to the *session*, constrain window size to the maximum size of any
# # client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on
set -g mouse-resize-pane on
set -g mouse-select-pane on
set -g mouse-select-window on

set -g status-justify centre
